version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: it-support-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: it_support_platform
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - it-support-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: it-support-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - it-support-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile.dev
    container_name: it-support-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/it_support_platform?schema=public
      - REDIS_URL=redis://redis:6379
    ports:
      - "3001:3001"
    volumes:
      - ./apps/backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - it-support-network
    command: npm run dev

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile.dev
    container_name: it-support-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001/api/v1
    ports:
      - "3000:3000"
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - it-support-network
    command: npm run dev

  # PgAdmin for database management (development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: it-support-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - it-support-network

volumes:
  postgres_data:
  redis_data:

networks:
  it-support-network:
    driver: bridge
